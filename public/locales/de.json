{
  "WebsiteName": {
    "ml": "Maschinelles Lernen",
    "with_lego": "mit LEGO¬Æ Bausteinen"
  },
  "Navigation": {
    "experiments": "Experimente üí°",
    "materials": "Materialien üìö",
    "imprint": "Impressum ‚ÑπÔ∏è",
    "privacyPolicy": "Datenschutzerkl√§rung üë§"
  },
  "Experiments": {
    "title": "Experimente",
    "text": "Hier ist eine Liste von Experimenten zum maschinellen Lernen, die du mit einem LEGO Spike Prime durchf√ºhren kannst.",
    "Cards": {
      "fruit-predictor": {
        "title": "Obstvorhersager",
        "description": "Sage eine Frucht mit ihrer L√§nge und Farbe mithilfe von K-Nearest Neighbors vorher!"
      },
      "ping-ponger": {
        "title": "Pingponger",
        "description": "Baue einen Roboter, der mit Hilfe der linearen Regression immer ins Ziel trifft!"
      },
      "crawler": {
        "title": "Krabbler",
        "description": "Bef√§hige einen selbstlernenden Krabbler mit Q-Learning!"
      }
    }
  },
  "FruitPredictor": {
    "title": "Obstvorhersager",
    "description": "Sage eine Frucht mit ihrer L√§nge und Farbe vorher!",
    "yAxisTitle": "L√§nge ¬† [cm]",
    "xAxisTitle": "Farbe",
    "showDecisionBorder": "Entscheidungsgrenze zeigen: ",
    "hideInfer": "Vorhersagedatenpunkt verbergen: ",
    "controlsTitle": "Steuerung",
    "dataTitle": "Daten",
    "fruitLabels": {
      "banana": "Banane",
      "apple": "Apfel"
    },
    "delete": "Entfernen",
    "label": "Label",
    "modelModes": {
      "train": "Training",
      "infer": "Vorhersage"
    },
    "selectClass": "Aktuelle Klasse:",
    "toasts": {
      "codeStarted": "Programm gestartet!"
    }
  },
  "PingPonger": {
    "title": "Pingponger",
    "description": "Baue einen Roboter, der immer ins Ziel trifft!",
    "modelModes": {
      "train": "Training",
      "infer": "Vorhersage"
    },
    "hideInfer": "Inferenzdatenpunkt verbergen: ",
    "yAxisTitle": "Motorleistung p ¬† [%]",
    "xAxisTitle": "Abstand d ¬† [cm]",
    "delete": "Entfernen",
    "sendNewPower": "Aktualisieren",
    "power": "Motorleistung",
    "calculateBest": "Beste Parameter ausrechnen",
    "linearRegression": "Lineare Regression",
    "latex": {
      "eachPoint": "jeder\\:Punkt",
      "lineEquation": "Geradengleichung",
      "real": "reell"
    },
    "parameters": {
      "slope": "Steigung",
      "intercept": "Achsenabschnitt"
    },
    "launch": "Ball werfen",
    "measure": "Abstand messen",
    "toasts": {
      "min2Points": "Du brauchst mindestens 2 Datenpunkte.",
      "codeStarted": "Programm gestartet!"
    },
    "loss": "Verlust"
  },
  "Crawler": {
    "title": "Krabbler",
    "description": "Baue einen selbstlernenden Krabbler!",
    "modes": {
      "automatic": "Auto",
      "semiAutomatic": "Semi-auto",
      "manual": "Manuell"
    },
    "modeLabel": "Halt vor der n√§chsten Bewegung",
    "explorations": {
      "no": "keine",
      "low": "niedrige",
      "high": "hohe"
    },
    "explorationLabel": "Exploration",
    "table": {
      "rowsHeader": "Aktueller Zustand",
      "columnsHeader": "N√§chster Zustand"
    },
    "actionType": {
      "exploitation": "Exploitation",
      "exploration": "Exploration"
    },
    "actionTypeLabel": "Modus",
    "thinkFutureLabel": "Zukunft denken",
    "controls": "Steuerung",
    "actionQualityTable": "Entscheidungstabelle",
    "rewardDiagram": "Belohnungsdiagramm",
    "toasts": {
      "codeStarted": "Programm gestartet!",
      "tooClose": "Der Krabbler ist zu nah an der Wand. Positioniere ihn neu und klicke auf 'Weiter', um fortzufahren.",
      "tooFar": "Der Krabbler ist zu weit von der Wand entfernt. Positioniere ihn neu und klicke auf 'Weiter', um fortzufahren."
    }
  },
  "video": "Video",
  "pdf": "PDF",
  "these instructions": "diese Anleitung",
  "FruitPredictorInstructions": {
    "title": "Anleitung: Obstvorhersager",
    "intro": "Auf dieser Seite lernst du, wie du ein einfaches Klassifizierungsger√§t baust, das √Ñpfel und Bananen unterscheiden kann. Es verwendet Farbe und L√§nge als Merkmale, die vom K-Nearest Neighbor-Algorithmus verarbeitet werden, um eine Vorhersage zu treffen.",
    "followVideo": "Du kannst unserem Experiment ",
    "followVideoPart2": " folgen und es Schritt f√ºr Schritt mit uns durchf√ºhren, oder es selbstst√§ndig anhand der folgenden Anleitung machen.",
    "assemblyTitle": "1. Zusammenbau",
    "assemblyText1Part1": "Baue zuerst das Ger√§t anhand ",
    "assemblyText1Part2": " zusammen. Stelle sicher, dass alle Sensoren an den korrekten Anschl√ºssen des Hubs angeschlossen sind.",
    "assemblyText2Part1": "Verbinde dann deinen Hub entweder mit der ",
    "assemblyText2Part2": "- oder der ",
    "assemblyText2Part3": "-Anleitung.",
    "dataCollectionTitle": "2. Datenerfassung",
    "dataCollectionText": "Nachdem du den Hub mit der Webplattform verbunden hast, starte den Code und warte auf die Best√§tigung des Code-Starts. Sammle mindestens 4 √Ñpfel und 4 Bananen. Nimm jeweils 3 davon und erfasse ihre Daten. Bringe jede Frucht zum Farbsensor und klicke auf die rechte Schaltfl√§che am Hub, um ihre Farbe aufzuzeichnen. Lege dann dieselbe Frucht in die Roboter-Klaue, schlie√üe sie und entferne die Frucht. Klicke nach dem Entfernen auf die linke Schaltfl√§che am Hub, um ihre L√§nge zu messen. Du siehst Datenpunkte im Diagramm erscheinen, wobei die L√§nge der Frucht auf der Y-Achse und ein Farbspektrum (von Rot nach Gelb) auf der X-Achse dargestellt sind.",
    "predictionTitle": "3. Vorhersage",
    "predictionText1": "Schalte den Modellmodus auf 'Vorhersage'. Neue Fr√ºchte werden mithilfe des K-Nearest Neighbor-Algorithmus klassifiziert. Der Algorithmus berechnet die Entfernungen zu allen vorhandenen Datenpunkten. Anschlie√üend w√§hlt er die 'K' (standardm√§√üig 3) n√§chsten Nachbarn aus und f√ºhrt eine Abstimmung durch. Wenn die Mehrheit dieser Nachbarn √Ñpfel sind, wird die neue Frucht als Apfel vorhergesagt, und umgekehrt f√ºr Bananen.",
    "predictionText2": "Um das Modell zu testen, messe die L√§nge und Farbe einer neuen Frucht wie beim Training. Die vorhergesagte Fruchtart wird auf dem SPIKE Prime Hub angezeigt, und ein neuer Datenpunkt erscheint im Diagramm. Linien verbinden diesen neuen Punkt mit den n√§chsten Nachbarn, die an der Abstimmung teilgenommen haben.",
    "thingsToTryTitle": "4. Ausprobieren",
    "thingsToTryText": "Versuche, die Visualisierung der 'Entscheidungsgrenze' einzuschalten. Dies zeigt Bereiche, in denen eine neue Frucht basierend auf ihren Merkmalen entweder als Apfel (in einer Farbe) oder als Banane (in einer anderen Farbe) vorhergesagt wird. Experimentiere mit der Erh√∂hung der Anzahl der Nachbarn ('K'), die an der Abstimmung teilnehmen, und beobachte, wie sich die Entscheidungsgrenze ver√§ndert."
 },
  "HubInteraction": {
    "portState": {
      "closed": "Hub verbinden",
      "open": "Hub trennen",
      "opening": "Verbindung...",
      "closing": "Trennung..."
    },
    "launchCode": "Programm starten",
    "stopCode": "Programm stoppen",
    "reboot": "Hub neu starten",
    "troubleshootingText": {
      "part1": "Es scheint, dass dein Browser keine Bluetooth-Verbindung unterst√ºtzt. Bitte lies unsere ",
      "link": "Seite zur Fehlerbehebung"
    }
  },
  "Settings": {
    "title": "Einstellungen",
    "bigMotorPort": "Port des gro√üen Motors",
    "smallMotorPort": "Port des kleinen Motors",
    "leftMotorPort": "Port des linken Motors",
    "rightMotorPort": "Port des rechten Motors",
    "distanceSensorPort": "Port des Abstandssensors",
    "colorSensorPort": "Port des Farbsensors",
    "isReversed": "Ist die Bewegung umgekehrt?",
    "bigMotorSpeed": "Geschwindigkeit des gro√üen Motors",
    "smallMotorSpeed": "Geschwindigkeit des kleinen Motors"
  },
  "Imprint": {
    "title": "Impressum"
  },
  "PrivacyPolicy": {
    "title": "Datenschutzerkl√§rung"
  },
  "Materials": {
    "title": "Materialien",
    "text": "Hier findest du Kursmaterialien wie Pr√§sentationen und Videoaufzeichnungen.",
    "Presentations": "Pr√§sentationen",
    "Presentations.english": "Englische",
    "Presentations.german": "Deutsche",
    "CoursePlaylist": "Kurs-Playlist",
    "CoursePlaylistTitle": "YouTube-Videoplayer"
  },
  "Home": {
    "title": "Willkommen!",
    "text": {
      "part1": "Diese Website ist eine interaktive Webplattform zum spielerischen Erlernen der Grundlagen des maschinellen Lernens mit ",
      "lego": "LEGO¬Æ Education SPIKE‚Ñ¢ Prime Set",
      "part2": ". Hier findest du verschiedene Experimente, die dir helfen, grundlegende Algorithmen wie K-Nearest Neighbors, Lineare Regression und Reinforcement Learning zu erlernen. Alles, was du brauchst, ist ein Ger√§t mit einem Browser, der Bluetooth-Verbindungen unterst√ºtzt."
    },
    "developers": "F√ºr Entwickler",
    "developersText": {
      "part1": "Du kannst dir den Quellcode dieser Seite in diesem ",
      "github": "GitHub-Repository",
      "part2": " ansehen. Wenn du ein Entwickler bist und auch in der Lage sein m√∂chtest, den LEGO Hub √ºber Bluetooth Low Energy mit einer Website zu verbinden, haben wir ein ",
      "boilerplate": "Boilerplate",
      "part3": " f√ºr dich erstellt!"
    },
    "troubleshooting": "Fehlerbehebung",
    "troubleshootingText": {
      "part1": "Wenn du auf technische Probleme st√∂√üt, schau auf unserer ",
      "link": "Seite zur Fehlerbehebung",
      "part2": " nach oder kontaktiere uns unter dieser E-Mail-Adresse: "
    },
    "materialsTitle": "Kursmaterialien",
    "materialsText": {
      "part1": "Wir ermutigen auch Leute, die diesen Kurs live mit Hilfe unserer Plattform an Kinder weitergeben m√∂chten. Daf√ºr k√∂nnen Sie unsere Pr√§sentationen in ",
      "part2": " und "
    },
    "courseRecordingTitle": "Kursaufzeichnung",
    "courseRecordingText": "Du kannst es entweder selbst ausprobieren, indem du den Anweisungen auf den Experimentseiten folgst, oder dir die vorab aufgezeichnete YouTube-Version des Kurses ansehen:",
    "presentations": "Pr√§sentationen",
    "presentationsEnglish": "Englische",
    "presentationsGerman": "Deutsche",
    "coursePlaylistTitle": "YouTube-Videoplayer"
  },
  "PitcherInstructions": {
    "intro": "In diesem Experiment bauen wir eine Roboter-'Wurfmaschine', die lernt, immer ins Ziel zu treffen. Wir nutzen die lineare Regression, um die optimale Motorleistung basierend auf der Entfernung zum Ziel vorherzusagen.",
    "followVideo": "Du kannst unserem Experiment ",
    "followVideoPart2": " folgen und deine Wurfmaschine Schritt f√ºr Schritt mit uns bauen, oder es selbstst√§ndig anhand der folgenden Anleitung machen.",
    "assemblyTitle": "1. Zusammenbau",
    "assemblyText1Part1": "Baue zuerst die Wurfmaschine anhand ",
    "assemblyText1Part2": " zusammen. Stelle sicher, dass der Motor und gegebenenfalls ein Abstandssensor an den korrekten Anschl√ºssen des Hubs angeschlossen sind.",
    "assemblyText2Part1": "Verbinde dann deinen Hub mit der Webplattform entweder mit der ",
    "assemblyText2Part2": "- oder der ",
    "assemblyText2Part3": "-Anleitung.",
    "dataCollectionTitle": "2. Datenerfassung",
    "dataCollectionText": "Nachdem du den Hub verbunden und den Code gestartet hast, sammeln wir Daten. Stelle die Wurfmaschine an eine gleichbleibende Startposition. Lege einen Ball in die Halterung; stelle sicher, dass sich der Wurfarm immer in der 12-Uhr-Position befindet, da dies konsistente W√ºrfe mit ausreichend Beschleunigungszeit gew√§hrleistet. Beginne in der Weboberfl√§che mit einer Motorleistung von 20% (denke daran, auf 'Aktualisieren' zu klicken, damit die √Ñnderungen √ºbernommen werden). Klicke auf die Schaltfl√§che 'Ball werfen' auf der Webplattform, um den Ball zu werfen. Beobachte, wo der Ball landet. Halte ein St√ºck Karton an die Stelle, an der der Ball gelandet ist. Der Karton erm√∂glicht es dem Abstandssensor am Roboter, ein Signal zu reflektieren und die zur√ºckgelegte Entfernung des Balls genau zu messen. Klicke auf die Schaltfl√§che 'Abstand messen' auf der Webplattform, um diese Entfernung aufzuzeichnen. Die gemessene Entfernung und die verwendete Motorleistung werden in der Weboberfl√§che aufgezeichnet. Wiederhole diese Schritte und verwende f√ºr jeden Wurf unterschiedliche Motorleistungswerte (z. B. 40%, 60%, 80%, bis zu 100%).",
    "predictionTitle": "3. Vorhersage",
    "predictionText1": "Wenn du dir deine gesammelten Datenpunkte ansiehst, wirst du feststellen, dass sie ann√§hernd eine gerade Linie bilden. Dies deutet auf eine lineare Beziehung zwischen der Motorleistung und der Entfernung hin, die der Ball zur√ºcklegt. Um die ben√∂tigte Motorleistung f√ºr das Treffen eines Ziels in einer bestimmten Entfernung vorherzusagen, verwendet die Wurfmaschine eine Methode des maschinellen Lernens namens lineare Regression.",
    "predictionText2": "Die lineare Regression ist eine Methode, die die Linie bestimmt, welche die Beziehung zwischen zwei Variablen am besten darstellt ‚Äì in unserem Fall die Entfernung, wo der Ball landet, und die zum Werfen verwendete Motorleistung.",
    "predictionText3": "Um zu verstehen, wie gut eine Linie zu den Daten passt, verwenden wir den Begriff 'Verlust' (Loss). Der Verlust stellt den Fehler zwischen der Linie und den tats√§chlichen Datenpunkten dar. Eine einfache M√∂glichkeit, den Verlust zu berechnen, ist beispielsweise die Summe der vertikalen Abst√§nde zwischen der Regressionsgeraden und jedem einzelnen Datenpunkt. Ein kleinerer Verlustwert deutet auf eine besser passende Linie hin.",
    "predictionText4": "Um die beste Linie zu finden, m√ºssen wir diesen Verlust minimieren. Dies k√∂nnen wir tun, indem wir die Position der Linie anpassen, die durch ihren Achsenabschnitt (wo die Linie die Y-Achse schneidet) und ihre Steigung (die Steilheit der Linie) bestimmt wird.",
    "predictionText5": "Du kannst dies selbst ausprobieren, indem du den Modellmodus auf 'Vorhersage' umschaltest. In diesem Modus kannst du die Parameter f√ºr die Steigung und den Achsenabschnitt manuell anpassen, um den Verlust im Diagramm visuell zu minimieren. Um die Parameter anzuzeigen, die der Algorithmus als die beste Anpassung f√ºr deine Daten berechnet, klicke auf die Schaltfl√§che 'Beste Parameter ausrechnen'.",
    "predictionText6": "Um zu versuchen, ein Ziel zu treffen, platziere im 'Vorhersage'-Modus eine Art Ziel vor die Wurfmaschine. Miss die Entfernung zum Ziel, indem du ein St√ºck Karton an die Position des Ziels h√§ltst und auf die Schaltfl√§che 'Abstand messen' klickst. Entferne dann den Karton, lege den Ball in die Klaue und klicke auf die Schaltfl√§che 'Ball werfen'. Der Roboter verwendet das gelernte lineare Regressionsmodell, um die ben√∂tigte Motorleistung f√ºr diese Entfernung vorherzusagen.",
    "thingsToTryTitle": "4. Ausprobieren",
    "thingsToTryText": "Experimentiere mit verschiedenen Entfernungen und beobachte, wie sich die vorhergesagte Motorleistung √§ndert. F√ºge weitere Datenpunkte hinzu, um zu sehen, wie sich dies auf die Genauigkeit der linearen Regressionsgerade auswirkt. Du kannst auch die Funktion 'Beste Parameter ausrechnen' verwenden, um die Steigung und den Achsenabschnitt der gelernten linearen Beziehung anzuzeigen."
  }
}