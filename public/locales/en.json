{
    "WebsiteName": {
        "ml": "Machine Learning",
        "with_lego": "with LEGOÂ® Bricks"
    },
    "Navigation": {
        "experiments": "Experiments ðŸ’¡"
    },
    "Experiments": {
        "title": "Experiments",
        "text": "Here is a list of machine learning experiments you can conduct with LEGOÂ® Education SPIKEâ„¢ Prime Set.",
        "Cards": {
            "fruit-predictor": {
                "title": "Fruit predictor",
                "description": "Predict a fruit based on its length and color!"
            },
            "ping-ponger": {
                "title": "Pitcher",
                "description": "Build a robot that always hits the target!"
            },
            "crawler": {
                "title": "Crawler",
                "description": "Build a self-learning crawler!"
            }
        }
    },
    "FruitPredictor": {
        "title": "Fruit predictor",
        "description": "Predict a fruit using its length and color!",
        "yAxisTitle": "Length   [cm]",
        "xAxisTitle": "Color",
        "showDecisionBorder": "Show decision border: ",
        "hideInfer": "Hide prediction datapoint: ",
        "controlsTitle": "Controls",
        "dataTitle": "Data",
        "fruitLabels": {
            "banana": "Banana",
            "apple": "Apple"
        },
        "delete": "Delete",
        "label": "Label",
        "modelModes": {
            "train": "Training",
            "infer": "Prediction"
        },
        "selectClass": "Current class:",
        "toasts": {
            "codeStarted": "Program started!"
        }
    },
    "PingPonger": {
        "title": "Pitcher",
        "description": "Build a robot that always hits the target!",
        "modelModes": {
            "train": "Training",
            "infer": "Prediction"
        },
        "hideInfer": "Hide prediction datapoint: ",
        "yAxisTitle": "Motor speed   [%]",
        "xAxisTitle": "Distance   [cm]",
        "delete": "Delete",
        "sendNewPower": "Update motor speed",
        "power": "Motor speed",
        "calculateBest": "Calculate best parameters",
        "linearRegression": "Linear Regression",
        "latex": {
            "eachPoint": "each\\:Point",
            "lineEquation": "line\\:equation",
            "real": "real"
        },
        "parameters": {
            "slope": "Slope",
            "intercept": "Intercept"
        },
        "launch": "Pitch ball",
        "measure": "Measure distance",
        "toasts": {
            "min2Points": "You need at least 2 data points.",
            "codeStarted": "Code started!"
        },
        "loss": "LOSS"
    },
    "Crawler": {
        "title": "Crawler",
        "description": "Build a self-learning crawler!",
        "modes": {
            "automatic": "Automatic",
            "semiAutomatic": "Semiautomatic",
            "manual": "Manual"
        },
        "modeLabel": "Wait before next move",
        "explorations": {
            "no": "no",
            "low": "low",
            "high": "high"
        },
        "explorationLabel": "Exploration",
        "table": {
            "rowsHeader": "Current State",
            "columnsHeader": "Next State"
        },
        "actionType": {
            "exploitation": "Exploitation",
            "exploration": "Exploration"
        },
        "actionTypeLabel": "Mode",
        "thinkFutureLabel": "Foresight",
        "controls": "Controls",
        "actionQualityTable": "Decision table",
        "rewardDiagram": "Reward diagram",
        "toasts": {
            "codeStarted": "Code started!",
            "tooClose": "The crawler is too close to the wall. Please reposition it and click continue to proceed.",
            "tooFar": "The crawler is too far from the wall. Please reposition it and click continue to proceed."
        }
    },
    "HubInteraction": {
        "portState": {
            "closed": "Connect hub",
            "open": "Disconnect hub",
            "opening": "Connecting...",
            "closing": "Disconnecting..."
        },
        "launchCode": "Start program",
        "stopCode": "Stop program",
        "reboot": "Reboot hub"
    },
    "Settings": {
        "title": "Settings",
        "bigMotorPort": "Port of the big motor",
        "smallMotorPort": "Port of the small motor",
        "leftMotorPort": "Port of the left motor",
        "rightMotorPort": "Port of the right motor",
        "distanceSensorPort": "Port of the distance sensor",
        "colorSensorPort": "Port of the color sensor",
        "isReversed": "Is the movement reversed?",
        "bigMotorSpeed": "Speed of the big motor",
        "smallMotorSpeed": "Speed of the small motor"
    }
}