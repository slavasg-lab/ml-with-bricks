{
  "WebsiteName": {
    "ml": "Machine Learning",
    "with_lego": "with LEGO¬Æ Bricks"
  },
  "Navigation": {
    "experiments": "Experiments üí°",
    "materials": "Materials üìö",
    "imprint": "Imprint ‚ÑπÔ∏è",
    "privacyPolicy": "Privacy Policy üë§"
  },
  "Experiments": {
    "title": "Experiments",
    "text": "Here is a list of machine learning experiments you can conduct with LEGO¬Æ Education SPIKE‚Ñ¢ Prime Set.",
    "Cards": {
      "fruit-predictor": {
        "title": "Fruit predictor",
        "description": "Predict a fruit based on its length and color using K-Nearest Neighbors!"
      },
      "ping-ponger": {
        "title": "Pitcher",
        "description": "Build a robot that always hits the target with help of linear regression!"
      },
      "crawler": {
        "title": "Crawler",
        "description": "Empower a self-learning crawler with Q-Learning!"
      }
    }
  },
  "FruitPredictor": {
    "title": "Fruit predictor",
    "description": "Predict a fruit using its length and color!",
    "yAxisTitle": "Length \u00A0 [cm]",
    "xAxisTitle": "Color",
    "showDecisionBorder": "Show decision border: ",
    "hideInfer": "Hide prediction datapoint: ",
    "controlsTitle": "Controls",
    "dataTitle": "Data",
    "fruitLabels": {
      "banana": "Banana",
      "apple": "Apple"
    },
    "delete": "Delete",
    "label": "Label",
    "modelModes": {
      "train": "Training",
      "infer": "Prediction"
    },
    "selectClass": "Current class:",
    "toasts": {
      "codeStarted": "Program started!"
    }
  },
  "PingPonger": {
    "title": "Pitcher",
    "description": "Build a robot that always hits the target!",
    "modelModes": {
      "train": "Training",
      "infer": "Prediction"
    },
    "hideInfer": "Hide prediction datapoint: ",
    "yAxisTitle": "Motor speed \u00A0 [%]",
    "xAxisTitle": "Distance \u00A0 [cm]",
    "delete": "Delete",
    "sendNewPower": "Update motor speed",
    "power": "Motor speed",
    "calculateBest": "Calculate best parameters",
    "linearRegression": "Linear Regression",
    "latex": {
      "eachPoint": "each\\:Point",
      "lineEquation": "line\\:equation",
      "real": "real"
    },
    "parameters": {
      "slope": "Slope",
      "intercept": "Intercept"
    },
    "launch": "Pitch ball",
    "measure": "Measure distance",
    "toasts": {
      "min2Points": "You need at least 2 data points.",
      "codeStarted": "Code started!"
    },
    "loss": "LOSS"
  },
  "Crawler": {
    "title": "Crawler",
    "description": "Build a self-learning crawler!",
    "modes": {
      "automatic": "Automatic",
      "semiAutomatic": "Semiautomatic",
      "manual": "Manual"
    },
    "modeLabel": "Wait before next move",
    "explorations": {
      "no": "no",
      "low": "low",
      "high": "high"
    },
    "explorationLabel": "Exploration",
    "table": {
      "rowsHeader": "Current State",
      "columnsHeader": "Next State"
    },
    "actionType": {
      "exploitation": "Exploitation",
      "exploration": "Exploration"
    },
    "actionTypeLabel": "Mode",
    "thinkFutureLabel": "Foresight",
    "controls": "Controls",
    "actionQualityTable": "Decision table",
    "rewardDiagram": "Reward diagram",
    "toasts": {
      "codeStarted": "Code started!",
      "tooClose": "The crawler is too close to the wall. Please reposition it and click continue to proceed.",
      "tooFar": "The crawler is too far from the wall. Please reposition it and click continue to proceed."
    }
  },
  "HubInteraction": {
    "portState": {
      "closed": "Connect hub",
      "open": "Disconnect hub",
      "opening": "Connecting...",
      "closing": "Disconnecting..."
    },
    "launchCode": "Start program",
    "stopCode": "Stop program",
    "reboot": "Reboot hub",
    "troubleshootingText": {
      "part1": "It seems that your browser doesn't support bluetooth connection. Please refer to our ",
      "link": "troubleshooting page"
    }
  },
  "Settings": {
    "title": "Settings",
    "bigMotorPort": "Port of the big motor",
    "smallMotorPort": "Port of the small motor",
    "leftMotorPort": "Port of the left motor",
    "rightMotorPort": "Port of the right motor",
    "distanceSensorPort": "Port of the distance sensor",
    "colorSensorPort": "Port of the color sensor",
    "isReversed": "Is the movement reversed?",
    "bigMotorSpeed": "Speed of the big motor",
    "smallMotorSpeed": "Speed of the small motor"
  },
  "Imprint": {
    "title": "Imprint"
  },
  "PrivacyPolicy": {
    "title": "Privacy Policy"
  },
  "Home": {
    "title": "Welcome!",
    "text": {
      "part1": "This website is an interactive web-platform designed to learning of funfamentals of machine learning interactively using ",
      "lego": "LEGO¬Æ Education SPIKE‚Ñ¢ Prime Set",
      "part2": ". Here you can find different experiments that help you learn basic algorithms such as K-Nearest Neighbors, Linear Regression and Reinforcement Learning. All you need is a device with browser that both support bluetooth connection."
    },
    "developers": "For Developers",
    "developersText": {
      "part1": "You can check out the source code of this page in this ",
      "github": "GitHub Repository",
      "part2": ". If you are a developer who wants to also be able to connect the LEGO Hub to a website using Bluetooth Low Energy, we created a ",
      "boilerplate": "boilerplate",
      "part3": " for you!"
    },
    "troubleshooting": "Troubleshooting",
    "troubleshootingText": {
      "part1": "If you encounter any technical problems, check out our ",
      "link": "troubleshooting page",
      "part2": " or reach us under this email adress: "
    },
    "materialsTitle": "Course Materials",
    "materialsText": {
      "part1": "We also encourage people who want to give this course live to children with help of our platform. For that, you can use our presentations. For that, you can use our presentations available in ",
      "part2": " and "
    },
    "courseRecordingTitle": "Course Recording",
    "courseRecordingText": "You can either try it yourself following instructions from experiment pages or watch prerecorded YouTube version of the course:",
    "presentations": "Presentations",
    "presentationsEnglish": "English",
    "presentationsGerman": "German",
    "coursePlaylistTitle": "YouTube video player"
  }
}